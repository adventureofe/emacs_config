# -*- mode: snippet -*-
# name: array
# key: array
# --
my_array = np.array([1, 2, 3, 4, 5])
my_array_zero = np.zeros((2, 3))
my_array_ones = np.ones((3, 2))
my_array_sevens = np.full((2, 2), 7)  # 2x2 array filled with 7

my_array_linspace = np.linspace(0, 1, 5)  # Array with 5 equally spaced values from 0 to 1
my_array_logspace = np.logspace(0, 1, 10)  # Array with 10 values spaced evenly on a log scale from 10^0 to 10^1
my_array_rand = np.random.rand(2, 3)  # 2x3 array of random values
my_array_randn = np.random.randn(2, 3)  # 2x3 array of random values with a standard normal distribution
my_array_range = np.arange(0, 10, 2)  # Array of numbers from 0 to 10 with a step of 2
my_array_rand_int = np.random.randint(0, 10, (2, 3))  # 2x3 array of random integers from 0 to 10
my_array_tile = np.tile([1, 2], 3)  # Repeats [1, 2] three times
my_array_stack = np.stack((np.array([1, 2]), np.array([3, 4])))  # Creates a new dimension
my_array_split = np.split(np.arange(9), 3)  # Splits into 3 sub-arrays

my_array_reverse_1 = my_array[::-1]
my_array_reverse_2 = np.flip(my_array)
my_array_max_value = np.max(my_array)
my_array_min_value = np.min(my_array)
my_array_flat = my_array.flatten()

my_array_head = my_array[0]
my_array_rest = my_array[1:]

my_array_plus = np_array + 1 #[2, 3, 4, 5, 6]
my_array_mult = np_array * 2 #[2, 4, 6, 8, 10]

my_subarray = np_array[1:4]

np.mean(np_array)      # Mean
np.median(np_array)    # Median
np.std(np_array)       # Standard Deviation
np.sum(np_array)

# boolean mask
data = np.array([1, 2, 3, 4, 5, 6])
mask = data % 2 == 0
print(data[mask])
